import os
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π
MEMORIES = {
    "memory_1": {
        "text": """–Ø –ø–æ–¥—É–º–∞–ª –∏ –∑–∞—Ö–æ—Ç–µ–ª —Å–æ–∑–¥–∞—Ç—å –Ω–∞—à —Å —Ç–æ–±–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π —É–≥–æ–ª–æ–∫ –¥–ª—è –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π, –≥–¥–µ –º—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å—ë, —á—Ç–æ –∑–∞—Ö–æ—Ç–∏–º. –ù–∞–¥–µ—é—Å—å, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è. üíô

–ú—ã –±—ã–ª–∏ –≤–º–µ—Å—Ç–µ –µ—â—ë –æ–¥–∏–Ω –≥–æ–¥. –ö–∞–∑–∞–ª–æ—Å—å –±—ã, –ø—Ä–æ—Å—Ç–æ–π –ø–æ—Ö–æ–¥ –≤ –º–∞–≥–∞–∑–∏–Ω, –Ω–æ —Å —Ç–æ–±–æ–π –¥–∞–∂–µ —Ç–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –±—ã–ª–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–º–∏. –ú–Ω–µ –≤—Å–µ–≥–¥–∞ –±—ã–ª–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–≤–æ—ë –º–Ω–µ–Ω–∏–µ, –ø–æ—ç—Ç–æ–º—É –≤—ã–±–∏—Ä–∞—Ç—å –æ–±—É–≤—å —Å —Ç–æ–±–æ–π ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫—É–ø–∫–∞, –∞ –Ω–∞—Å—Ç–æ—è—â–µ–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ.

–¢–æ–≥–¥–∞ –º—ã –∏—Å–∫–∞–ª–∏ –º–Ω–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –ø–µ—Ä–µ–¥ –º–æ–∏–º –≤—Ç–æ—Ä—ã–º –¥–ª–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ç—ä–µ–∑–¥–æ–º –Ω–∞ —Å–±–æ—Ä—ã –≤ –ö–∞–∑–∞–Ω—å. –ò, –∫–æ–Ω–µ—á–Ω–æ, —Ç—ã –±—ã–ª–∞ —Ä—è–¥–æ–º ‚Äì –º–æ—è –≤–µ—Ä–Ω–∞—è –¥–µ–∫–∞–±—Ä–∏—Å—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–µ–Ω—è, –∫—É–¥–∞ –±—ã —è –Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è.

P.s –ê –µ—â—ë –∏–º–µ–Ω–Ω–æ –≤ —Ç–æ—Ç –¥–µ–Ω—å –º—ã –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –ø–æ–Ω—è–ª–∏: —Ç—ã ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π –æ–∫—É—à–æ–∫! üêüüíô""",
        "files": [
            "https://drive.google.com/uc?export=view&id=13HSjkqBBSOQwTJWdTj7ZK5gRHbKDFDqi",
            "https://drive.google.com/uc?export=view&id=1e9kr5B89m98I-o93GcZ4RlzLYnJP_9Qi",
            "https://drive.google.com/uc?export=view&id=1Bprh73cvlw8bxMYEs3UksGkfsChgSsrh",
            "https://drive.google.com/uc?export=view&id=1JKA4jqkA5oY-NEARjFczg2xqucyENPu2",
            "https://drive.google.com/uc?export=view&id=1OsGYCJvIPTZxlxti21GuLw4s9QvuxMuW",
            "https://drive.google.com/uc?export=view&id=1IYBODimHVysMnGLIA9koRJ7PKBasv2E2",
            "https://drive.google.com/uc?export=view&id=1ebPBe0EBAbuySSwH1hbxA6fdyIZ16lua",
            "https://drive.google.com/uc?export=view&id=1u0nhW5IHJlS8UsQsVTWdJfnJjVBnhuzk"

        ]
    },
    "memory_2": {
        "text": "–¢–µ–∫—Å—Ç –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è QR-–∫–æ–¥–∞ 2...",
        "files": [
            "https://drive.google.com/uc?export=view&id=YOUR_FILE_ID_3",
            "https://drive.google.com/uc?export=view&id=YOUR_FILE_ID_4",
        ]
    },
    # –î–æ–±–∞–≤—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è (memory_3 - memory_12)
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–∏–∑ QR-–∫–æ–¥–∞)
@dp.message(CommandStart(deep_link=True))
async def start_cmd(message: Message, command: CommandStart):
    param = command.text.split()[-1] if len(command.text.split()) > 1 else None

    if param and param in MEMORIES:
        memory = MEMORIES[param]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è
        await message.answer(memory["text"])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ (–∏–ª–∏ –¥–∞—ë–º —Å—Å—ã–ª–∫—É, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è)
        for file_url in memory["files"]:
            try:
                if file_url.endswith(".mp4"):
                    await message.answer_video(file_url)
                else:
                    await message.answer_photo(file_url)
            except Exception:
                await message.answer(f"üîó –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª, –ø–æ–ø—Ä–æ–±—É–π –æ—Ç–∫—Ä—ã—Ç—å –≤—Ä—É—á–Ω—É—é: {file_url}")

    else:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ QR-–∫–æ–¥ –∏–ª–∏ —á–∏—Å–ª–æ (1-12), –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ. üíô")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
